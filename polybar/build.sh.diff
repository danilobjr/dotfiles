--- /home/danilo/.polybar/build.sh	2018-08-07 01:18:19.684281794 -0300
+++ /home/danilo/.dotfiles/polybar/build.sh	2018-08-07 01:18:15.844269859 -0300
@@ -28,6 +28,7 @@
   mkdir ./build || msg_err "Failed to create build dir"
   cd ./build || msg_err "Failed to enter build dir"
 
+  try_to_use_clang="ON"
   local build_ipc_msg="ON"
   local enable_alsa="ON"
   local enable_pulseaudio="ON"
@@ -35,42 +36,13 @@
   local enable_network="ON"
   local enable_mpd="ON"
   local enable_curl="ON"
-
-  msg "Setting build options"
-
-  read -r -p "$(msg "Use GCC even if Clang is installed ----------------------------- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && try_to_use_clang="ON"
-  read -r -p "$(msg "Include support for \"internal/i3\" (requires i3) ---------------- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_i3="OFF"
-  read -r -p "$(msg "Include support for \"internal/alsa\" (requires alsalib) --------- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_alsa="OFF"
-  read -r -p "$(msg "Include support for \"internal/pulseaudio\" (requires libpulse) -- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_pulseaudio="OFF"
-  read -r -p "$(msg "Include support for \"internal/network\" (requires libnl/libiw) -- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_network="OFF"
-  read -r -p "$(msg "Include support for \"internal/mpd\" (requires libmpdclient) ----- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_mpd="OFF"
-  read -r -p "$(msg "Include support for \"internal/github\" (requires libcurl) ------- [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && enable_curl="OFF"
-  read -r -p "$(msg "Build \"polybar-msg\" used to send ipc messages ------------------ [y/N]: ")" -n 1 p && echo
-  [[ "${p^^}" != "Y" ]] && build_ipc_msg="OFF"
-
   local cxx="c++"
   local cc="cc"
 
-  if [[ "${try_to_use_clang}" == "ON" ]]; then
-    if command -v clang++ >/dev/null; then
-      msg "Using compiler: clang++/clang"
-      cxx="clang++"
-      cc="clang"
-    elif command -v g++ >/dev/null; then
-      msg "Using compiler: g++/gcc"
-      cxx="g++"
-      cc="gcc"
-    fi
-  else
-      cxx="g++"
-      cc="gcc"
+  if command -v clang++ >/dev/null; then
+    msg "Using compiler: clang++/clang"
+    cxx="clang++"
+    cc="clang"
   fi
 
   msg "Executing cmake command"
@@ -89,15 +61,8 @@
   msg "Building project"
   make || msg_err "Failed to build project"
 
-  read -r -p "$(msg "Execute 'sudo make install'? [Y/n] ")" -n 1 p && echo
-  [[ "${p^^}" == "Y" ]] && {
-    sudo make install || msg_err "Failed to install executables..."
-  }
-
-  read -r -p "$(msg "Install example configuration? [Y/n]: ")" -n 1 p && echo
-  [[ "${p^^}" == "Y" ]] && {
-    make userconfig || msg_err "Failed to install user configuration..."
-  }
+  sudo make install || msg_err "Failed to install executables..."
+  make userconfig || msg_err "Failed to install user configuration..."
 
   msg "Build complete!"
 
